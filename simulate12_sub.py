import matplotlib.pyplot as plt
import numpy as np
import random
import copy
from math import *

INF = -1
Going = 0
PlayerLose = 1
MasterLose = 2
MAX_TIME = 2 * 10**3
MAX_SIM  = 2 * 10**3
    

def calc(k):
    return [ factorial(k)/(factorial(i)*factorial(k-i)) for i in range(k+1)]
    

def simulate12(trial_num = 500):
    normal = [0.0] * 101;
    combs = calc(80)
    
    for n in range(2, 101):
        if n%2 == 1: continue
        if 0 <= -n/2+30: 
             normal[n] = trial_num * ( combs[int(n/2)+30] - combs[int(-n/2)+30] ) / 2**80
        else: normal[n] = trial_num * ( combs[int(n/2)+30] ) / 2**80
    
    # **** simulate12.py の結果をここにコピペしてね！ この行は削除しても大丈夫
    mean_result = [12.71, 0, 3.67, 0, 7.73, 0, 11.98, 0, 17.67, 0, 23.65, 0, 30.61, 0, 36, 0, 39.67, 0, 42.48, 0, 44.91, 0, 44.32, 0, 40.91, 0, 35.54, 0, 29.57, 0, 24.57, 0, 18.5, 0, 12.48, 0, 9.19, 0, 5.87, 0, 3.65, 0, 2.04, 0, 1.19, 0, 0.53, 0, 0.35, 0, 0.14, 0, 0.02, 0, 0.04, 0, 0, 0, 0, 0, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    stdev_result = [3.5112949063261434, 0.0, 1.9282849447845691, 0.0, 2.72606202083044, 0.0, 3.0183947837728367, 0.0, 4.218896882964896, 0.0, 4.6218082079540155, 0.0, 5.225993695079444, 0.0, 5.521308584461521, 0.0, 6.063727226614657, 0.0, 5.975505557412416, 0.0, 6.668325551183419, 0.0, 6.380019315381927, 0.0, 6.404062788731869, 0.0, 5.951691042269101, 0.0, 5.425817445279094, 0.0, 4.623731057153831, 0.0, 4.400413203738527, 0.0, 3.3196081063580354, 0.0, 2.444102363575708, 0.0, 2.4356568400380714, 0.0, 2.0018930434905253, 0.0, 1.3700991632621768, 0.0, 1.1520293907586374, 0.0, 0.7713951678941896, 0.0, 0.6723244767373876, 0.0, 0.37658754867650873, 0.0, 0.14070529413628968, 0.0, 0.19694638556693236, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

    for i in range(0, 101):
        if i%2 == 0 and abs(normal[i] - mean_result[i]) >= stdev_result[i]:
            print(i, ': ', normal[i], ', ', mean_result[i], ', ', stdev_result[i])


# ().py simulation_type player_money master_money probability
if __name__ == "__main__":
    simulate12()
